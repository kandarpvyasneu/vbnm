## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://localhost:3306/cloud_database?useSSL=false
#spring.datasource.username = root
#spring.datasource.password =

#spring.datasource.url = jdbc:mysql://csye6225-spring2018.c43ldtuhjvnz.us-east-1.rds.amazonaws.com/urvi?useSSL=false
#spring.datasource.username = csye6225master
#spring.datasource.password = csye6225password

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

#amazonProperties.endpointUrl = ${ENDPOINTURL_KEY:DEFAULThttps://s3.us-east-1.amazonaws.com}
#amazonProperties.bucketName = ${BUCKETNAME_KEY:DEFAULT.demo.csye7374-spring2019-kandarp.me}


#amazonProperties.accessKey = ${ACCESSKEY:DEFAULT123}
#amazonProperties.secretKey = ${SECRETKEY:DEFAULT345}

#greeter.message=%s %s! Spring Boot application.properties has been mounted as volume on Kubernetes!
spring.datasource.url = jdbc:mysql://csye6225-fall2018.c9g1trkpdie3.us-east-2.rds.amazonaws.com:3306/csye6225?useSSL=false
spring.datasource.username = csye6225master
spring.datasource.password = csye6225password
spring.jpa.hibernate.ddl-auto = validate
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#spring.datasource.url = jdbc:mysql://testing01.cxqpnnn7mmz9.us-east-1.rds.amazonaws.com:3306/dbname101?useSSL=false
#spring.datasource.username = username
#spring.datasource.password = password

logging.file=${catalina.base}/logs/csye7225.log
#special.how: veryasas
#management.security.enabled=false

management.endpoints.enabled-by-default=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus